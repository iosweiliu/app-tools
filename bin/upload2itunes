#!/usr/bin/env ruby

require 'rubygems'
require 'methadone'
require 'app_tools/version'
require 'fileutils'
require 'cfpropertylist'
require 'zip'

#
# This project is an extraction and rewrite in Ruby of
# https://github.com/drewcrawford/CaveJohnson/blob/master/cavejohnson/__init__.py#L122
#

module AppTools
  module Upload2Itunes
    include Methadone::Main
    include Methadone::CLILogging
    include Methadone::ExitNow

    main do |ipa_path|
      if !File.exist?(ipa_path) or !File.extname(ipa_path) == '.ipa'
        exit_now! "Must supply a .ipa path to process"
      end

      # Create working variables
      ipa_basename = File.basename(ipa_path)
      itmsp_path = File.dirname(ipa_path) + '/' + ipa_basename[0...-4] + '.itmsp'
      itunes_user = options[:u]
      keychain_name = "app-tools/iTunesConnect - #{itunes_user}"
      itunes_password = options[:p]

      if itunes_password.nil?
        IO.popen(['security', 'find-generic-password', '-s', keychain_name, '-w']) do |io|
          itunes_password = io.read.chop
        end
      end


      FileUtils.rm_rf itmsp_path
      FileUtils.mkdir itmsp_path

      plist_data = nil

      Zip::File.open(ipa_path) do |zip_file|
        entry = zip_file.glob('Payload/*/Info.plist').first
        plist = CFPropertyList::List.new(:data => entry.get_input_stream.read)
        plist_data = CFPropertyList.native_types(plist.value)
      end

      itunes_app_id = options[:i]
      short_bundle_version = plist_data['CFBundleShortVersionString']
      bundle_version = plist_data['CFBundleVersion']
      bundle_identifier = plist_data['CFBundleIdentifier']
      new_ipa_path = File.join(itmsp_path, ipa_basename)

      FileUtils.cp ipa_path, new_ipa_path

      md5 = `md5 -q #{new_ipa_path}`.chop
      file_size = `stat -f "%z" #{new_ipa_path}`.chop

      metadata_xml = %Q(<?xml version="1.0" encoding="UTF-8"?>
<package version="software5.2" xmlns="http://apple.com/itunes/importer">
    <software_assets apple_id="#{itunes_app_id}"
        bundle_short_version_string="#{short_bundle_version}"
        bundle_version="#{bundle_version}"
        bundle_identifier="#{bundle_identifier}">
        <asset type="bundle">
            <data_file>
                <file_name>#{ipa_basename}</file_name>
                <checksum type="md5">#{md5}</checksum>
                <size>#{file_size}</size>
            </data_file>
        </asset>
    </software_assets>
</package>)

      File.open(itmsp_path + '/metadata.xml', 'w') { |file| file.write(metadata_xml) }

      itmstransporter = "/Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/itms/bin/iTMSTransporter"
      IO.popen([itmstransporter, '-m', 'upload', '-u', itunes_user, '-p', itunes_password, '-f', itmsp_path]) do |io|
        while not io.eof?
          puts io.readline()
        end
      end
      exitstatus = $?.exitstatus
      FileUtils.rm_rf itmsp_path
      exitstatus
    end

    description 'upload2itunes - Upload an IPA file to iTunesConnect'
    version AppTools::VERSION

    on("-u", "--itunes-user USER", "The iTunesConnect user name")
    on("-i", "--itunes-app-id APP_ID", "The iTunesConnect app ID")
    on("-p", "--itunes-password PASSWORD", "The iTunes user password, otherwise the password is retrieved from the keychain.")

    arg :ipa_path, "An IPA path", :require

    use_log_level_option :toggle_debug_on_signal => 'USR1'

    go!
  end
end
